{
  "name": "JM Etancelin",
  "tagline": "Research Engineer ROMEO Champagne-Ardenne HPC Center Nvidia Application Lab Reims Champagne-Ardenne University UFR Sciences Exactes et Naturelles Moulin de la Housse - BP 1039 51687 Reims Cedex 2 jean-matthieu.etancelin@univ-reims.fr +33(0) 3 26 91 89 09",
  "body": "## PhD, Engineer\r\n\r\n### Presentation\r\n\r\nCurrently, I am a research engineer at Champagne-Ardenne High Performance Computing Center ROMEO. I am involved in a Nvidia Application Lab in which we are helping users to derive benefits from this GPU powered cluster by lending a hand to porting and optimizing their own codes.\r\n\r\nI obtained my PhD in applied mathematics at Université Joseph Fourier, Grenoble in the PDE team of the Jean Kuntzmann Laboratory. This work was supervised by G.H. Cottet and C. Picard and funded by the ANR Project HAMM. The main objectives of this PhD was to study the adequacy of methods coupling, multi-scale algorithms and hybrid computing for turbulent flows simulation.\r\n\r\nI obtained an engineer diploma in mathematics at National Institute of Applied Sciences of Rouen and a Master in mathematics and computer science for complex and distributed systems at Le Havre University.\r\n\r\n### Research\r\n\r\nI am interested in the design and the implementation of high performance algorithms and numerical methods. Heterogeneous parallelism is mandatory and needs to be taken into account not only on the algorighm level but also on the numerical method itself.\r\n\r\nHigh performance computing\r\nGPU computing\r\nHybrid architectures\r\nEnergy aware algorithms\r\nHybrid remeshed particle method for transport equations\r\nMulti-scale methods\r\nHigh order remeshing formula\r\nHigh order semi-Lagrangian particle method\r\nApplications\r\nPure scalar transport\r\nMulti-scale passive scalar transport in turbulent flow\r\n\r\n### Teaching\r\n\r\n#### 2013/2014\r\nLinear algebra and multivariate calculus (L2, MAT234, 36h)\r\nPractical introduction to applied mathematics (L1, MAP110-120, 27h)\r\n\r\n#### 2011/2012 and 2012/2013\r\n\r\nComputer science methods and programming techniques (L1, INF111, 135h)\r\n\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}